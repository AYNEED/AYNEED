scalar DateTime

schema {
  mutation: Mutation
  query: Query
  subscription: Subscription
}

type Mutation {
  forgotPassword(email: String!): Boolean!

  forgotPasswordChange(password: String!, recoveryCode: String!): User!

  signInEmail(email: String!, password: String!, client: CLIENT!): User!

  signUpEmail(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
    locale: LOCALE!
    isAgree: Boolean!
    client: CLIENT!
  ): User!
}

type Query {
  user(id: ID!): User
  users(cursor: ID): UserFeed!
}

type Subscription {
  userAdded: User!
  userUpdated: User!
}

enum LOCALE {
  rus
}

enum LANGUAGE_LEVEL {
  beginner
  elementary
  intermediate
  upper_intermediate
  advanced
  proficiency
}

enum CLIENT {
  mobile
  desktop
}

type User {
  id: ID!
  network: UserNetwotk!
  about: UserAboutData!
  personal: UserPersonalData!
  regional: UserRegionalData!
  contacts: UserContactsData!
  statistics: UserStatisticsData!
  createdAt: DateTime!
}

type UserNetwotk {
  isOnline: Boolean!
  client: CLIENT!
}

type UserFeed {
  items: [User!]!
  hasMore: Boolean!
}

type UserAboutData {
  bio: String
  skills: [UserSkillRecord!]!
  career: [UserCareerRecord!]!
  education: [UserEducationRecord!]!
}

type UserPersonalData {
  firstName: String!
  lastName: String!
  isAgree: Boolean!
  bornAt: DateTime
  photo: [String!]!
}

type UserRegionalData {
  city: String
  state: String
  country: String
  locale: LOCALE!
  languages: [UserLanguageRecord!]!
}

type UserContactsData {
  email: UserContactRecord!
  phone: UserContactRecord
  vkontakte: UserContactRecord
  facebook: UserContactRecord
  instagram: UserContactRecord
  telegram: UserContactRecord
  linkedin: UserContactRecord
}

type UserStatisticsData {
  completeness: Int!
}

type UserSkillRecord {
  title: String!
  primary: Boolean!
}

type UserCareerRecord {
  title: String!
  description: String!
}

type UserEducationRecord {
  title: String!
  description: String!
}

type UserLanguageRecord {
  code: String!
  level: LANGUAGE_LEVEL!
}

type UserContactRecord {
  value: String!
  isVisible: Boolean!
  isVerified: Boolean!
}
